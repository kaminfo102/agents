// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id             String         @id @default(uuid())
  nationalId     String         @unique
  phoneNumber    String         @unique
  firstName      String
  lastName       String
  fatherName     String?
  city           String
  address        String?
  educationCenter String?
  isActive       Boolean        @default(true)
  profileImage   String?
  role           String         @default("REPRESENTATIVE") // Changed from enum to string
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  orders         Order[]
  messagesReceived Message[]    @relation("MessageReceiver")
  messagesSent     Message[]    @relation("MessageSender")
  requests       Request[]
}

model Product {
  id          String    @id @default(uuid())
  title       String
  description String?
  image       String?
  price       Float
  category    String    @default("other")
  stock       Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  orderItems  OrderItem[]
}

model Order {
  id          String    @id @default(uuid())
  orderNumber String    @unique @default("LEGACY-ORDER")
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  status      String    @default("PENDING") // Changed from enum to string
  totalAmount Float     @default(0)
  description String?   // Added description field
  paymentStatus String  @default("UNPAID") // UNPAID, PAID, PARTIALLY_PAID
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  items       OrderItem[]
  payments    Payment[]
}

model OrderItem {
  id          String    @id @default(uuid())
  order       Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId     String
  product     Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId   String
  quantity    Int
  price       Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([orderId, productId])
}

model Message {
  id          String    @id @default(uuid())
  sender      User      @relation("MessageSender", fields: [senderId], references: [id], onDelete: Cascade)
  senderId    String
  receiver    User      @relation("MessageReceiver", fields: [receiverId], references: [id], onDelete: Cascade)
  receiverId  String
  content     String
  isRead      Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Request {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  title       String
  description String
  status      String    @default("PENDING") // Changed from enum to string
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Payment {
  id          String    @id @default(uuid())
  order       Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId     String
  amount      Float
  receiptImage String
  paymentDate DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}